{

  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Launches ECS Based Elasticsearch Service",

  "Parameters" : {

    "StackOutputsArn" : {
      "Type" : "String"
    },

    "ServiceName" : {
      "Type" : "String"
    },

    "ServicePort" : {
      "Type" : "String"
    },

    "ServiceImage" : {
      "Type" : "String"
    },

    "ServiceVersion" : {
      "Type" : "String"
    },

    "ClusterName" : {
      "Type" : "String"
    },

    "DesiredCount" : {
      "Type" : "String",
      "Default" : "3"
    }

  },

  "Resources" : {

    "Registry": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "registry"
      }
    },

    "Network": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "network"
      }
    },

    "Scheduler": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "lambda-scheduler"
      }
    },

    "Environment": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "environment"
      }
    },

    "ECS": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "ecs"
      }
    },

    "LoggingGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": "5"
      }
    },

    "ElasticSearchSnapshotBucket" : {
      "Type" : "AWS::S3::Bucket",
      "Properties" : {
        "AccessControl" : "Private"
      }
    },

    "ECSElasticsearchInstancePolicy" : {
       "Type" : "AWS::IAM::Policy",
       "Properties" : {
          "PolicyName" : "ECSElasticsearchInstancePolicy",
          "PolicyDocument" : {
            "Version" : "2012-10-17",
            "Statement": [
              {
                "Action": [
                  "s3:*"
                ],
                "Effect": "Allow",
                "Resource": [
                  { "Fn::Join" : ["", [
                    "arn:aws:s3:::" , { "Ref" : "ElasticSearchSnapshotBucket" } ]
                  ] }
                ]
              },
              {
                "Action": [
                  "s3:*"
                ],
                "Effect": "Allow",
                "Resource": [
                  { "Fn::Join" : ["", [
                    "arn:aws:s3:::" , { "Ref" : "ElasticSearchSnapshotBucket" }, "/*" ]
                  ] }
                ]
              },
              {
                "Effect":"Allow",
                "Action": [ "cloudformation:DescribeStackResource" ],
                "Resource": "*"
              },
              {
                "Effect":"Allow",
                "Action": [
                  "autoscaling:DescribeAutoScalingGroups",
                  "ec2:DescribeInstances",
                  "ec2:DescribeTags"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [ "ec2:CreateTags" ],
                "Resource": [ "*" ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:Describe*",
                  "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                  "elasticloadbalancing:Describe*",
                  "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                ],
                "Resource": [ "*" ]
              }
            ]
          },
          "Roles" : [ { "Fn::GetAtt": [ "ECS", "InstanceRole" ] } ]
       }
    },

    "ServiceTaskDefinition" : {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties" : {
        "ContainerDefinitions" : [
          {
            "Name" : { "Ref" : "ServiceName" },
            "Essential" : "true",
            "Command" : ["elasticsearch"],
            "Image" : { "Fn::Join" : ["", [
              { "Fn::GetAtt": [ "Registry", "URL" ] }, "/",
              { "Ref" : "ServiceImage" }, ":", { "Ref" : "ServiceVersion" }]]
            },
            "Memory" : "1024",
            "Cpu" : "512",
            "Environment" : [
              {
                "Name" : "CLUSTER_NAME",
                "Value" : { "Ref" : "ClusterName" }
              },
              {
                "Name" : "AWS_REGION",
                "Value" : { "Ref" : "AWS::Region" }
              },
              {
                "Name" : "CLUSTER_SECURITY_GROUP",
                "Value" : { "Fn::GetAtt": [ "ECS", "SecurityGroup" ] }
              },
              {
                "Name" : "CLUSTER_INSTANCE_NAME_TAG",
                "Value" : { "Fn::GetAtt": [ "ECS", "InstanceNameTag" ] }
              }
            ],
            "PortMappings" : [
              {
                "ContainerPort" : { "Ref" : "ServicePort" },
                "HostPort" : { "Ref" : "ServicePort" }
              },
              {
                "ContainerPort" : "9300",
                "HostPort" : "9300"
              }
            ],
            "MountPoints": [
              {
                "SourceVolume": "data",
                "ContainerPath": "/data/elasticsearch",
                "ReadOnly": false
              }
            ]
          }
        ],
        "Volumes" : [
          {
            "Name" : "data",
            "Host" : {
              "SourcePath" : "/data"
            }
          }
        ]
      }
    },

    "SnapshotTaskDefinition" : {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties" : {
        "ContainerDefinitions" : [
          {
            "Name" : { "Ref" : "ServiceName" },
            "Essential" : "true",
            "Command" : ["/backup_cluster.sh"],
            "Image" : { "Fn::Join" : ["", [
              { "Fn::GetAtt": [ "Registry", "URL" ] }, "/",
              { "Ref" : "ServiceImage" }, ":", { "Ref" : "ServiceVersion" }]]
            },
            "Memory" : "128",
            "Cpu" : "64",
            "Environment" : [
              {
                "Name" : "ELASTICSEARCH_ENDPOINT",
                "Value" : { "Fn::Join" : ["", [{ "Ref" : "ServiceName" }, ".", { "Fn::GetAtt": [ "ECS", "HostedZone" ] }]] }
              },
              {
                "Name" : "AWS_REGION",
                "Value" : { "Ref" : "AWS::Region" }
              },
              {
                "Name" : "S3_SNAPSHOT_BUCKET",
                "Value" : { "Ref" : "ElasticSearchSnapshotBucket"}
              }
            ]
          }
        ]
      }
    },

    "Service": {
      "Type": "AWS::ECS::Service",
      "Properties" : {
        "Cluster": { "Fn::GetAtt": [ "ECS", "ECSCluster" ] },
        "DesiredCount": { "Ref": "DesiredCount" },
        "TaskDefinition" : { "Ref":"ServiceTaskDefinition" },
        "Role" : { "Fn::GetAtt": [ "ECS", "InstanceRole" ] },
        "LoadBalancers" : [
          {
            "LoadBalancerName" : { "Ref" : "ElasticLoadBalancer" },
            "ContainerName" : { "Ref" : "ServiceName" },
            "ContainerPort" : { "Ref" : "ServicePort" }
          }
        ]
      }
    },

    "DailySnapshotTask": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["Scheduler", "TokenArn"] },
        "Table" : { "Fn::GetAtt" : ["Scheduler", "Table"] },
        "Task" : {
          "Recurrence" : "* 35 0 * * *",
          "Cluster" : { "Fn::GetAtt": [ "ECS", "ECSCluster" ] },
          "TaskDefinition" : { "Ref" : "SnapshotTaskDefinition" }
        }
      }
    },


    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Scheme" : "internal",
        "AccessLoggingPolicy" : {
          "EmitInterval" : "60",
          "Enabled" : "true",
          "S3BucketName" : { "Fn::GetAtt": [ "Environment", "LoggingBucket" ] },
          "S3BucketPrefix" : { "Fn::Join" :  ["", ["coreos/", { "Ref" : "ServiceName" }, "/elb" ]] }
        },
        "ConnectionSettings" : {
          "IdleTimeout" : "60"
        },
        "SecurityGroups" : [ { "Ref" : "LoadBalancerSecurityGroup" } ],
        "Subnets" : [
          { "Fn::GetAtt": [ "Network", "PrivateSubnetA" ] },
          { "Fn::GetAtt": [ "Network", "PrivateSubnetB" ] },
          { "Fn::GetAtt": [ "Network", "PrivateSubnetC" ] }
        ],
        "Listeners" : [
          {
            "LoadBalancerPort" : { "Ref" : "ServicePort" },
            "InstancePort" : { "Ref" : "ServicePort" },
            "Protocol" : "HTTP"
          }
        ],
        "HealthCheck" : {
          "Target" : { "Fn::Join" : ["", ["HTTP:", { "Ref" : "ServicePort" }, "/"]] },
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "20",
          "Timeout" : "10"
        }
      }
    },

    "RequestCountHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription": { "Fn::Base64": { "Fn::Join" : ["", [
          "{",
            "\"service\":\"", { "Ref" : "Service" }, "\",",
            "\"cluster\":\"", { "Fn::GetAtt": [ "ECS", "ECSCluster" ] }, "\"",
          "}"
        ]]}},
        "MetricName": "RequestCount",
        "Namespace": "AWS/ELB",
        "Statistic": "Sum",
        "Period": "300",
        "EvaluationPeriods": "1",
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": "500",
        "AlarmActions": [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "OKActions" : [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "InsufficientDataActions" : [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "Dimensions": [{
          "Name": "LoadBalancerName",
          "Value": { "Ref": "ElasticLoadBalancer" }
        }]
      }
    },

    "LoadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable TCP access on port 80",
        "VpcId" : { "Fn::GetAtt": [ "Network", "VPCId" ] },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "9200", "ToPort" : "9200", "CidrIp" : { "Fn::Join" : ["", ["10.", { "Fn::GetAtt": [ "Network", "VPCSecondOctet" ] }, ".0.0/16"]] } }
        ]
      }
    },

    "LoadBalancerIngressIntoECSServer": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": { "Ref" : "ServicePort" },
        "ToPort": { "Ref" : "ServicePort" },
        "SourceSecurityGroupId": { "Ref" : "LoadBalancerSecurityGroup" },
        "GroupId": { "Fn::GetAtt": [ "ECS", "SecurityGroup" ] }
      }
    },

    "ECSServer9200IngressIntoECSServer": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": "9200",
        "ToPort": "9200",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "ECS", "SecurityGroup" ] },
        "GroupId": { "Fn::GetAtt": [ "ECS", "SecurityGroup" ] }
      }
    },

    "ECSServer9300IngressIntoECSServer": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": "9300",
        "ToPort": "9300",
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "ECS", "SecurityGroup" ] },
        "GroupId": { "Fn::GetAtt": [ "ECS", "SecurityGroup" ] }
      }
    },

    "ServiceDNSZone" : {
      "Type" : "AWS::Route53::RecordSetGroup",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" :  ["", [{ "Fn::GetAtt": [ "ECS", "HostedZone" ] }, "."]] },
        "RecordSets" : [{
          "Name" : { "Fn::Join" : ["", [{ "Ref" : "ServiceName" }, ".", { "Fn::GetAtt": [ "ECS", "HostedZone" ] }, "."]] },
          "Type" : "A",
          "AliasTarget" : {
            "HostedZoneId" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "CanonicalHostedZoneNameID"] },
            "DNSName" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "DNSName"] }
          }
        }]
      }
    }

  },

  "Outputs" : {

    "ElasticSearchEndpoint" : {
      "Description" : "Server address of the ElasticSearch",
      "Value" : { "Fn::Join" : ["", ["http://", { "Ref" : "ServiceName" }, ".", { "Fn::GetAtt": [ "ECS", "HostedZone" ] }, ":", { "Ref" : "ServicePort" }]] }
    },

    "ElasticSearchHost" : {
      "Description" : "Server address of the ElasticSearch",
      "Value" : { "Fn::Join" : ["", [{ "Ref" : "ServiceName" }, ".", { "Fn::GetAtt": [ "ECS", "HostedZone" ] }]] }
    },

    "ElasticSearchPort" : {
      "Description" : "Port to connect with ElasticSearch with",
      "Value" : { "Ref" : "ServicePort" }
    }

  }

}
